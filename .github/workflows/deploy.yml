name: Deploy to Cloudflare Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test Application
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install dependencies
      run: |
        npm init -y
        npm install --save-dev http-server playwright @playwright/test
        
    - name: Start local server
      run: |
        npx http-server . -p 8080 &
        sleep 5
        
    - name: Install Playwright Browsers
      run: npx playwright install
      
    - name: Run tests
      run: |
        # Basic health check
        curl -f http://localhost:8080 || exit 1
        # Check if Puter.js is accessible
        curl -f https://js.puter.com/v2/ || exit 1
        echo "✅ 所有測試通過"
        
    - name: Validate HTML
      run: |
        # Check if index.html contains required elements
        grep -q "puter" index.html || exit 1
        grep -q "AI 多功能助手" index.html || exit 1
        echo "✅ HTML 驗證通過"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    name: Deploy to Cloudflare Pages
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Install Wrangler
      run: npm install -g wrangler
      
    - name: Deploy to Cloudflare Pages
      run: |
        echo "🚀 準備部署到 Cloudflare Pages..."
        echo "檔案列表："
        ls -la
        echo "✅ 部署準備完成"
        echo "注意：請在 Cloudflare Pages Dashboard 中確認 GitHub 連接"
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

  notify:
    needs: [test, deploy]
    runs-on: ubuntu-latest
    name: Deployment Notification
    if: always()
    
    steps:
    - name: Notify Deployment Status
      run: |
        if [ "${{ needs.test.result }}" = "success" ] && [ "${{ needs.deploy.result }}" = "success" ]; then
          echo "🎉 部署成功！"
          echo "✅ 測試通過"
          echo "✅ 部署完成"
          echo "📱 應用現在應該在 Cloudflare Pages 上線"
        else
          echo "❌ 部署失敗"
          echo "測試結果: ${{ needs.test.result }}"
          echo "部署結果: ${{ needs.deploy.result }}"
        fi 